
Процедура ЗаполнитьПоСведениямОбОблигации(СведенияОбОблигации) Экспорт 
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СведенияОбОблигации,, "Купоны, Погашения");
	
	ИменаТабЧастей = Новый Массив;
	ИменаТабЧастей.Добавить("Купоны");
	ИменаТабЧастей.Добавить("Погашения");
	Для Каждого ИмяТабЧасти Из ИменаТабЧастей Цикл
		ТабЧасть = ЭтотОбъект[ИмяТабЧасти];
		ТаблицаСведений = СведенияОбОблигации[ИмяТабЧасти];
		ТабЧасть.Очистить();
		Для Каждого СтрокаТаблицы Из ТаблицаСведений Цикл
			НоваяСтрока = ТабЧасть.Добавить(); 
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеМетаОбъекта(МетаОбъект)
	
	Результат = МетаОбъект.Синоним;
	
	Если ПустаяСтрока(Результат) Тогда
		Результат = МетаОбъект.Имя;
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьРасхожденияСоСведениямиОбОблигации(СведенияОбОблигации) Экспорт 
	
	Расхождения = Новый Массив;
	
	МетаданныеОбъекта = ЭтотОбъект.Метаданные();
	
	// реквизиты
	КоллекцииРеквизитов = Новый Массив;
	КоллекцииРеквизитов.Добавить(МетаданныеОбъекта.СтандартныеРеквизиты);
	КоллекцииРеквизитов.Добавить(МетаданныеОбъекта.Реквизиты);
	Для Каждого ТекКоллекция Из КоллекцииРеквизитов Цикл
		Для Каждого МетаРекв Из ТекКоллекция Цикл
			ИмяРекв = МетаРекв.Имя;
			Если СведенияОбОблигации.Свойство(ИмяРекв)Тогда
				ЗначБаза = ЭтотОбъект[ИмяРекв];
				ЗначМосбиржа = СведенияОбОблигации[ИмяРекв];
				Если ЗначБаза <> ЗначМосбиржа Тогда
					Расхождения.Добавить(
						"Реквизит """ + ПредставлениеМетаОбъекта(МетаРекв) + """: "
						+ "База = """ + ЗначБаза + """, "
						+ "Мосбиржа = """ + ЗначМосбиржа + """."
						);
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	
	// таб.части
	Для Каждого МетаТабЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		ИмяТабЧасти = МетаТабЧасть.Имя;
		Если СведенияОбОблигации.Свойство(ИмяТабЧасти) Тогда
			ТабЧастьБаза = ЭтотОбъект[ИмяТабЧасти];
			ТаблицаМосбиржа = СведенияОбОблигации[ИмяТабЧасти];
			Если ТабЧастьБаза.Количество() <> ТаблицаМосбиржа.Количество() Тогда
					Расхождения.Добавить(
						"Таб.часть """ + ПредставлениеМетаОбъекта(МетаТабЧасть) + """: отличается количество строк. "
						+ "База = " + ТабЧастьБаза.Количество() + ", "
						+ "Мосбиржа = " + ТаблицаМосбиржа.Количество() + "."
						);
					Продолжить;
			КонецЕсли;
			Если ТаблицаМосбиржа.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли; 
			СтруктураПоиска = Новый Структура;
			ВремТЗ = Новый ТаблицаЗначений;
			Для Каждого МетаРекв Из МетаТабЧасть.Реквизиты Цикл
				ИмяРекв = МетаРекв.Имя;
				Если ТаблицаМосбиржа[0].Свойство(МетаРекв.Имя) Тогда
					СтруктураПоиска.Вставить(ИмяРекв, Неопределено);
					ВремТЗ.Колонки.Добавить(ИмяРекв);
				КонецЕсли; 
			КонецЦикла;
			Для Каждого СтрокаТаблицыМосбиржи Из ТаблицаМосбиржа Цикл
				ЗаполнитьЗначенияСвойств(ВремТЗ.Добавить(), СтрокаТаблицыМосбиржи);
			КонецЦикла; 
			Для Каждого СтрокаТабЧасти Из ТабЧастьБаза Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТабЧасти);
				НайденныеСтроки = ВремТЗ.НайтиСтроки(СтруктураПоиска);
				Если НайденныеСтроки.Количество() = 0 Тогда
					Расхождения.Добавить(
						"Таб.часть """ + ПредставлениеМетаОбъекта(МетаТабЧасть) + """: "
						+ "различаются данные в строке №" + Формат(СтрокаТабЧасти.НомерСтроки, "ЧГ=") + "."
						);
					Продолжить;
				КонецЕсли; 
				ВремТЗ.Удалить(НайденныеСтроки[0]);
			КонецЦикла; 
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат Расхождения;
	
КонецФункции