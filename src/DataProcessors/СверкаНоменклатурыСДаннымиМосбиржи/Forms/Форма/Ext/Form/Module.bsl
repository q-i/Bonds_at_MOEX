
&НаКлиенте
Процедура Проверить(Команда)
	
	Если СписокНоменклатуры.Количество() = 0 Тогда
		ДополнительныеПараметры = Новый Структура; 
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПродолжитьПроверкуВсейНоменклатурыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, "Внимание! Проверка ВСЕЙ номенклатуры может занять продолжительное время!
			|Продолжить?", РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Отмена);
	Иначе 
		ПроверитьНоменклатуруПоСписку(СписокНоменклатуры);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПродолжитьПроверкуВсейНоменклатурыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СписокПроверяемойНоменклатуры = ПолучитьСписокВсейНоменклатурыНаСервере();
		ПроверитьНоменклатуруПоСписку(СписокПроверяемойНоменклатуры);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыбранные(Команда)
	
	ДополнительныеПараметры = Новый Структура; 
	ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПродолжитьОбновлениеНоменклатурыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, "Внимание! Реквизиты выбранной номенклатуры будут переписаны данными Мосбиржи!
		|Продолжить?", РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПродолжитьОбновлениеНоменклатурыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОбновитьВыбраннуюНоменклатуру();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыбраннуюНоменклатуру()
	
	СтрокиСРасхождениями = ПолучитьСтрокиСРасхождениями();
	КолвоЭлементов = СтрокиСРасхождениями.Количество();
	
	Если КолвоЭлементов > 0 Тогда
		КолвоОбработано = 0;
		Для Каждого СтрокаТаблицы Из СтрокиСРасхождениями Цикл
			
			ОбработкаПрерыванияПользователя();
			Состояние("Обновление номенклатуры...", Окр(КолвоОбработано / КолвоЭлементов * 100));
			
			ТекНоменклатура = СтрокаТаблицы.Номенклатура;
			СведенияОбОблигации = СтрокаТаблицы.СведенияОбОблигации;
			Если СведенияОбОблигации <> Неопределено Тогда
				ОбновитьНоменклатуруНаСервере(ТекНоменклатура, СведенияОбОблигации);
				ОповеститьОбИзменении(ТекНоменклатура);
				Расхождения = ПолучитьРасхожденияСоСведениямиОбОблигацииНаСервере(ТекНоменклатура, СведенияОбОблигации);
				СтрокаТаблицы.ЕстьРасхождения = (Расхождения.Количество() > 0);
				СтрокаТаблицы.Комментарий = ОбщегоНазначенияКлиентСервер.Сцепить(Расхождения, Символы.ПС);
			Иначе 
				ИндексСтроки = РезультатПроверки.Индекс(СтрокаТаблицы);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось получить сведения о бумаге " + ТекНоменклатура + " с сайта Мосбиржи",, "РезультатПроверки[" + Формат(ИндексСтроки, "ЧГ=") + "].Номенклатура");
			КонецЕсли;
			
			КолвоОбработано = КолвоОбработано + 1;
		КонецЦикла; 
	КонецЕсли;
	
	Состояние("Обновление номенклатуры завершено!", 100);
		
	ПоказатьСтатистику();
	
КонецПроцедуры
 

&НаСервере
Процедура ОбновитьНоменклатуруНаСервере(НоменклатураСсылка, СведенияОбОблигации)

	НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
	НоменклатураОбъект.ЗаполнитьПоСведениямОбОблигации(СведенияОбОблигации);
	НоменклатураОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНоменклатуруПоСписку(СписокПроверяемойНоменклатуры) 
	
	РезультатПроверки.Очистить();
	
	КолвоЭлементов = СписокПроверяемойНоменклатуры.Количество();
	
	Если КолвоЭлементов > 0 Тогда
		КолвоОбработано = 0;
		Для Каждого ЭлемСЗ Из СписокПроверяемойНоменклатуры Цикл
			
			ОбработкаПрерыванияПользователя();
			Состояние("Проверка номенклатуры...", Окр(КолвоОбработано / КолвоЭлементов * 100));
			
			ТекНоменклатура = ЭлемСЗ.Значение;
			ПроверитьНоменклатуруНаСервере(ТекНоменклатура);
			
			КолвоОбработано = КолвоОбработано + 1;
		КонецЦикла; 
	КонецЕсли; 
	
	Состояние("Проверка номенклатуры завершена!", 100);
	
	ОтметитьСтрокиСРасхождениями();
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаРезультатПроверки;
	
	ПоказатьСтатистику();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВсейНоменклатурыНаСервере() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура.Наименование";
	Выборка = Запрос.Выполнить().Выбрать();
	СЗ = Новый СписокЗначений; 
	Пока Выборка.Следующий() Цикл
		СЗ.Добавить(Выборка.Ссылка);
	КонецЦикла; 
	
	Возврат СЗ;
	
КонецФункции

&НаСервере
Процедура ПроверитьНоменклатуруНаСервере(НоменклатураСсылка) 
	
	НоваяСтрока = РезультатПроверки.Добавить(); 
	НоваяСтрока.Номенклатура = НоменклатураСсылка;
	
	СведенияОбОблигации = ПолучениеДанныхМосбиржиСервер.ПолучитьСведенияОбОблигацииССайтаМосбиржи(НоменклатураСсылка.Код);
	НоваяСтрока.СведенияОбОблигации = СведенияОбОблигации;
	Если СведенияОбОблигации = Неопределено Тогда
		НоваяСтрока.ЕстьРасхождения = Истина;
		НоваяСтрока.Комментарий = "Не удалось получить сведения об этой бумаге с сайта Мосбиржи";
		Возврат;
	КонецЕсли;
	
	Расхождения = ПолучитьРасхожденияСоСведениямиОбОблигацииНаСервере(НоменклатураСсылка, СведенияОбОблигации);
	НоваяСтрока.ЕстьРасхождения = (Расхождения.Количество() > 0);
	НоваяСтрока.Комментарий = ОбщегоНазначенияКлиентСервер.Сцепить(Расхождения, Символы.ПС);

КонецПроцедуры
 

&НаСервере
Функция ПолучитьРасхожденияСоСведениямиОбОблигацииНаСервере(НоменклатураСсылка, СведенияОбОблигации)
	
	НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
	Возврат НоменклатураОбъект.ПолучитьРасхожденияСоСведениямиОбОблигации(СведенияОбОблигации);
	
КонецФункции

&НаКлиенте
Процедура УстановитьПометку(ЗначениеПометки, СтрокиДляУстановкиПометки = Неопределено)
	
	Для Каждого СтрокаТаблицы Из РезультатПроверки Цикл
		Если СтрокиДляУстановкиПометки = Неопределено
			Или СтрокиДляУстановкиПометки.Найти(СтрокаТаблицы) <> Неопределено Тогда
			СтрокаТаблицы.Пометка = ЗначениеПометки;
		Иначе
			СтрокаТаблицы.Пометка = НЕ ЗначениеПометки;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьСтрокиСРасхождениями()
	
	УстановитьПометку(Истина, ПолучитьСтрокиСРасхождениями());
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьПометку(Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьПометку(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьРасхождения(Команда)
	
	ОтметитьСтрокиСРасхождениями();
		
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокиСРасхождениями()
		
	Возврат РезультатПроверки.НайтиСтроки(Новый Структура("ЕстьРасхождения", Истина));
	
КонецФункции
 
&НаКлиенте
Процедура ПоказатьСтатистику()
	
	КолвоВсего = РезультатПроверки.Количество();
	КолвоСРасхождениями = ПолучитьСтрокиСРасхождениями().Количество();
	
	ТекстСообщения = "";
	
	Если КолвоСРасхождениями = 0 Тогда
		ТекстСообщения = "Расхождений не найдено!
			|(всего записей: " + КолвоВсего + ")";
	Иначе 
		ТекстСообщения = "Найдено расхождений: " + КолвоСРасхождениями + "
			|(всего записей: " + КолвоВсего + ")";
	КонецЕсли; 
	
	ПоказатьПредупреждение(, ТекстСообщения);
	
КонецПроцедуры
